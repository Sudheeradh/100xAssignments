/**
  You need to create an express HTTP server in Node.js which will handle the logic of a todo list app.
  - Don't use any database, just store all the data in an array to store the todo list data (in-memory)
  - Hard todo: Try to save responses in files, so that even if u exit the app and run it again, the data remains (similar to databases)

  Each todo has a title and a description. The title is a string and the description is a string.
  Each todo should also get an unique autogenerated id every time it is created
  The expected API endpoints are defined below,
  1.GET /todos - Retrieve all todo items
    Description: Returns a list of all todo items.
    Response: 200 OK with an array of todo items in JSON format.
    Example: GET http://localhost:3000/todos
    
  2.GET /todos/:id - Retrieve a specific todo item by ID
    Description: Returns a specific todo item identified by its ID.
    Response: 200 OK with the todo item in JSON format if found, or 404 Not Found if not found.
    Example: GET http://localhost:3000/todos/123
    
  3. POST /todos - Create a new todo item
    Description: Creates a new todo item.
    Request Body: JSON object representing the todo item.
    Response: 201 Created with the ID of the created todo item in JSON format. eg: {id: 1}
    Example: POST http://localhost:3000/todos
    Request Body: { "title": "Buy groceries", "completed": false, description: "I should buy groceries" }
    
  4. PUT /todos/:id - Update an existing todo item by ID
    Description: Updates an existing todo item identified by its ID.
    Request Body: JSON object representing the updated todo item.
    Response: 200 OK if the todo item was found and updated, or 404 Not Found if not found.
    Example: PUT http://localhost:3000/todos/123
    Request Body: { "title": "Buy groceries", "completed": true }
    
  5. DELETE /todos/:id - Delete a todo item by ID
    Description: Deletes a todo item identified by its ID.
    Response: 200 OK if the todo item was found and deleted, or 404 Not Found if not found.
    Example: DELETE http://localhost:3000/todos/123

    - For any other route not defined in the server return 404

  Testing the server - run `npm run test-todoServer` command in terminal
 */
const express = require('express');
const bodyParser = require('body-parser');
const fs = require('fs');
const PORT = 3000;
let jsonContent; 

function readTodosFile() {
  jsonContent = fs.readFileSync('todos.json', 'utf8');
}

const app = express();
app.use(bodyParser.json());

function handleGetTodos(req, res) {
  readTodosFile();
  dataObj = JSON.parse(jsonContent);

  arr = []
  for (key in dataObj) {
    if (key != "nextId") {
      arr.push(dataObj[key]);
    }
  }
  res.send(arr);
}

function handleGetTodosId(req, res) {
  readTodosFile();
  dataObj = JSON.parse(jsonContent);
  
  if ([req.params.id] in dataObj) {
    res.send(dataObj[req.params.id]);
  } else {
    res.sendStatus(404);
  }
}

function handlePostTodos(req, res) {
  readTodosFile();
  dataObj = JSON.parse(jsonContent);
  let currId = Math.floor(Math.random() * 100000);
  while((currId in dataObj)){
    currId = Math.floor(Math.random() * 100000);
  }
  dataObj[currId] = req.body;
  dataObj[currId]["id"] = currId;
  jsonContent = JSON.stringify(dataObj);
  fs.writeFileSync("todos.json", jsonContent);
  res.status(201).send({id: currId});
}

function handlePostTodosId(req, res) {
  readTodosFile();
  dataObj = JSON.parse(jsonContent);

  if ([req.params.id] in dataObj) {
    dataObj[req.params.id] = req.body;
    jsonContent = JSON.stringify(dataObj);
    fs.writeFileSync("todos.json", jsonContent);
    res.sendStatus(201);
  } else {
    res.sendStatus(404);
  }
}

function handlePutTodos(req, res) {
  readTodosFile();
  dataObj = JSON.parse(jsonContent);

  if ([req.params.id] in dataObj) {
    dataObj[req.params.id] = req.body;
    jsonContent = JSON.stringify(dataObj);
    fs.writeFileSync("todos.json", jsonContent);
    res.sendStatus(200);
  } else {
    res.sendStatus(404);
  }
}

function handleDeleteTodos(req, res) {
  readTodosFile();
  dataObj = JSON.parse(jsonContent);
  if ([req.params.id] in dataObj) {
    delete dataObj[req.params.id];
    jsonContent = JSON.stringify(dataObj);
    fs.writeFileSync("todos.json", jsonContent);
    res.sendStatus(200);
  } else {
    res.sendStatus(404);
  }
}

app.get('/todos', handleGetTodos);
app.get('/todos/:id', handleGetTodosId);
app.post('/todos', handlePostTodos);
app.post('/todos/:id', handlePostTodosId);
app.put('/todos/:id', handlePutTodos);
app.delete('/todos/:id', handleDeleteTodos);



module.exports = app;
